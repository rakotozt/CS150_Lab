#BlueJ class context
comment0.target=BinarySearchTree
comment0.text=\r\n\ Binary\ Search\ Tree\r\n\r\n\ @author\ Tafita\ Rakoto\r\n\ @version\ 1\r\n
comment1.params=
comment1.target=BinarySearchTree()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ BinarySearchTree\r\n
comment10.params=e
comment10.target=boolean\ contains(java.lang.Comparable)
comment10.text=\r\n\ \ Returns\ true\ if\ the\ tree\ contains\ the\ specified\ key.\r\n\ @\ e\ \:\ key\ to\ search\ for\ \r\n
comment2.params=e\ node
comment2.target=BinaryNode\ insert(java.lang.Comparable,\ BinaryNode)
comment3.params=e
comment3.target=boolean\ insert(java.lang.Comparable)
comment4.params=elements
comment4.target=void\ insertAll(java.lang.Comparable[])
comment4.text=\r\n\ Inserts\ an\ array\ of\ elements\r\n\r\n\ @param\ elements\ the\ array\ of\ elements\ to\ insert\r\n
comment5.params=node
comment5.target=java.lang.Comparable\ findMax(BinaryNode)
comment5.text=\r\n\ Find\ the\ maximum\ and\ return\ maximum\ in\ element\ in\ a\ tree\ \r\n\r\n\ @param\ node\ node\ in\ concern\r\n\ @return\ return\ the\ maximu\ node\ \r\n
comment6.params=
comment6.target=java.lang.Comparable\ findMax()
comment6.text=\r\n\ Find\ the\ maximum\ element\ in\ node\ \r\n\r\n\ @return\ return\ the\ maximum\ node\ \r\n
comment7.params=node
comment7.target=java.lang.Comparable\ findMin(BinaryNode)
comment7.text=\r\n\ Finds\ and\ returns\ the\ lowest\ item\ in\ a\ tree.\r\n\ @param\ node\ \:\ starting\ node.\ Usually\ the\ root\ \r\n
comment8.params=
comment8.target=java.lang.Comparable\ findMin()
comment8.text=\r\n\ Finds\ and\ returns\ the\ lowest\ item\ in\ the\ tree.\r\n
comment9.params=node\ key
comment9.target=boolean\ ifNodeExists(BinaryNode,\ java.lang.Comparable)
comment9.text=\r\n\ Finds\ if\ the\ Node\ containing\ the\ key\ exists\ \r\n\ \r\n\ @param\ key\ \r\n
numComments=11
