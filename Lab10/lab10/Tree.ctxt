#BlueJ class context
comment0.target=Tree
comment0.text=\r\n\ Interface\ Tree\ \r\n\r\n\ @author\ Tafita\ Rakotozandry\r\n\ @version\ 1\r\n
comment1.params=e
comment1.target=boolean\ insert(java.lang.Object)
comment1.text=\r\n\ Inserts\ the\ given\ key\ to\ the\ tree,\ if\ it\ is\r\n\ not\ already\ present\ (duplicate\ keys\ are\ not\ allowed\ in\ the\ tree).\r\n\ @param\ e\ The\ key\ to\ insert\r\n\ @return\ true\ if\ insertion\ was\ successful.\r\n
comment10.params=
comment10.target=boolean\ isEmpty()
comment10.text=\r\n\ @return\ true\ if\ tree\ is\ empty,\ false\ otherwise\r\n
comment2.params=e
comment2.target=boolean\ contains(java.lang.Object)
comment2.text=\r\n\ @param\ e\ The\ key\ to\ check\ for\r\n\ @return\ true\ if\ the\ tree\ contains\ the\r\n\ specified\ key.\r\n
comment3.params=i
comment3.target=int\ numOfElementsDepth(int)
comment3.text=\r\n\r\n\ @param\ i\ depth\ to\ check\ for\r\n\ @return\ the\ number\ of\ elements\ at\ a\ certain\ depth\ i\r\n
comment4.params=
comment4.target=java.lang.Object\ findMax()
comment4.text=\r\n\ @return\ finds\ and\ returns\ the\ max\ element\ of\ tree\r\n
comment5.params=
comment5.target=java.lang.Object\ findMin()
comment5.text=\r\n\ @return\ finds\ and\ returns\ the\ min\ element\ of\ the\ tree\r\n
comment6.params=
comment6.target=java.lang.String\ preOrderString()
comment6.text=\r\n\ @return\ string\ representation\ of\ this\ using\ pre-order\ traversal\r\n
comment7.params=
comment7.target=java.lang.String\ postOrderString()
comment7.text=\r\n\ @return\ string\ representation\ of\ this\ using\ post-order\ traversal\r\n
comment8.params=
comment8.target=java.lang.String\ inOrderString()
comment8.text=\r\n\ @return\ string\ representation\ of\ this\ using\ in-order\ traversal\r\n
comment9.params=
comment9.target=void\ empty()
comment9.text=\r\n\ removes\ all\ elements\ from\ the\ tree\r\n
numComments=11
