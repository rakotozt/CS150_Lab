#BlueJ class context
comment0.target=ArrayPriorityQueue
comment0.text=\r\n\ Priority\ Queue\ Implementation\ \r\n\r\n\ @author\ Tafita\ Rakotozandry\ \r\n\ @version\ 1\r\n
comment1.params=
comment1.target=void\ main()
comment10.params=
comment10.target=java.lang.String\ toString()
comment2.params=
comment2.target=ArrayPriorityQueue()
comment2.text=\r\n\ Constructor\ for\ objects\ of\ class\ ArrayPriorityQueue\r\n
comment3.params=t
comment3.target=boolean\ add(java.lang.Comparable)
comment3.text=\r\n\ Insert\ t\ at\ the\ end\ of\ the\ ArrayList,\ returning\ true\ if\ successful\r\n\r\n\r\n\ @param\ \ t\ element\ \r\n\ @return\ \ \ \ boolean\ \r\n
comment4.params=a\ i\ j
comment4.target=void\ swap(java.util.ArrayList,\ int,\ int)
comment5.params=i
comment5.target=int\ parent(int)
comment6.params=
comment6.target=java.lang.Comparable\ poll()
comment6.text=\r\n\ \ Find\ the\ minimal\ element,\ remove\ it\ from\ the\ ArrayList,\ and\ return\ it.\ Use\ a\ simple\ linear\ scan.\r\n\r\n\ @return\ \ \ \ minimum\ element\ \r\n
comment7.params=hole
comment7.target=void\ reorder(int)
comment8.params=
comment8.target=java.lang.Comparable\ peek()
comment8.text=\r\n\ \ Find\ and\ return\ the\ minimal\ element,\ without\ removing\ it\r\n\r\n\ @return\ \ return\ the\ minimal\ element\r\n
comment9.params=
comment9.target=boolean\ isEmpty()
numComments=11
